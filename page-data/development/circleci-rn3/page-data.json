{"componentChunkName":"component---src-templates-blog-post-js","path":"/development/circleci-rn3/","webpackCompilationHash":"1fe8c166a1002efcf8fa","result":{"data":{"site":{"siteMetadata":{"title":"Philographer.dev","author":"Philographer","siteUrl":"https://gatsby-starter-bee.netlify.com","comment":{"disqusShortName":"yoohoogun114","utterances":""},"sponsor":{"buyMeACoffeeId":""}}},"markdownRemark":{"id":"3b9e065d-fac6-5573-817f-685eadb8817b","excerpt":"1. React Native 프로젝트에서 Fastlane을 사용하기(Android 편) android-circleci\n이제 ios를 모두 구성하였으니, android를 구성해보자. Android의 경우는 beta 배포로서 Fabric Beta도 가능하지만, 이 가이드에서는 간편함을 위해 AWS S3를 사용해본다.  경로에 다음과 같이 작성한다.\n아래 내용은 Setup - fastlane docs…","html":"<h1 id=\"1-react-native-프로젝트에서-fastlane을-사용하기android-편\"><a href=\"#1-react-native-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8%EC%97%90%EC%84%9C-fastlane%EC%9D%84-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0android-%ED%8E%B8\" aria-label=\"1 react native 프로젝트에서 fastlane을 사용하기android 편 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. React Native 프로젝트에서 Fastlane을 사용하기(Android 편)</h1>\n<p><img src=\"https://udemy-images.udemy.com/course/750x422/1110974_6279_2.jpg\" alt=\"android-circleci\">\n이제 ios를 모두 구성하였으니, android를 구성해보자.</p>\n<p>Android의 경우는 beta 배포로서 <a href=\"https://docs.fabric.io/apple/beta/overview.html\">Fabric Beta</a>도 가능하지만, 이 가이드에서는 간편함을 위해 <a href=\"https://aws.amazon.com/ko/s3/\">AWS S3</a>를 사용해본다.</p>\n<p><code class=\"language-text\">DevOpsForRN/android/fastlane/Fastfile</code> 경로에 다음과 같이 작성한다.\n아래 내용은 <a href=\"https://docs.fastlane.tools/getting-started/android/setup/\">Setup - fastlane docs</a> 가이드를 따라 하면 동일하게 구성할 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\"># This file contains the fastlane.tools configuration\n# You can find the documentation at https://docs.fastlane.tools\n#\n# For a list of all available actions, check out\n#\n#     https://docs.fastlane.tools/actions\n#\n\n# Uncomment the line if you want fastlane to automatically update itself\n# update_fastlane\n\ndefault_platform(:android)\n\nplatform :android do\n  desc &quot;Runs all the tests&quot;\n  lane :test do\n    gradle(task: &quot;test&quot;, flags: &quot;--no-daemon -x bundleReleaseJsAndAssets&quot;)\n  end\n\n  desc &quot;Submit a new Beta Build to Crashlytics Beta&quot;\n  lane :beta do\n    gradle(task: &quot;assembleRelease&quot;, flags: &quot;--no-daemon -x bundleReleaseJsAndAssets&quot;)\n\t  # crashlytics\n\n\n    # sh &quot;your_script.sh&quot;\n    # You can also use other beta testing services here\n  end\n\n  desc &quot;Deploy a new version to the Google Play&quot;\n  lane :deploy do\n    gradle(task: &quot;assembleRelease&quot;)\n    upload_to_play_store\n  end\nend</code></pre></div>\n<p>마찬가지로 <code class=\"language-text\">DevOpsForRN/android/fastlane/Appfile</code> 의 경로에도 다음과 같이 작성한다. 이 부분도 fastlane android 공식 가이드 문서에 따르면 동일하다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">json_key_file &quot;&quot; # Path to the json secret file - Follow https://docs.fastlane.tools/actions/supply/#setup to get one\npackage_name &quot;com.devopsforrn&quot; # e.g. com.krausefx.app</code></pre></div>\n<p>Android의 경우에는 release apk를 만드는데  Code Signing 필요하다. 다음의 링크를 참조하여 Code Signing을 진행한다.\n<a href=\"https://stackoverflow.com/a/18329835/5622387\">android - How to create a release signed apk file using Gradle? - Stack Overflow</a></p>\n<h1 id=\"2-gradle-시간별로-빌드\"><a href=\"#2-gradle-%EC%8B%9C%EA%B0%84%EB%B3%84%EB%A1%9C-%EB%B9%8C%EB%93%9C\" aria-label=\"2 gradle 시간별로 빌드 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. Gradle 시간별로 빌드</h1>\n<p>추후에, 빌드된 apk가 <code class=\"language-text\">S3</code>에 쌓이는데, 모두 같은 이름이라면 덮어씌워 질 수 있으므로 Gradle이 빌드되었을때 apk의 시간대별로 생성되도록 하면 구별하는데 동무을 줄 수 있다. 이와같은 기능을 사용하려면 다음의 내용을 따라해보자.</p>\n<p><code class=\"language-text\">DevOpsForRN/app/build.gradle</code> 파일의 내용을 다음의 내용으로 수정한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">...\n...\napplicationVariants.all { variant -&gt;\n        variant.outputs.each { output -&gt;\n            // For each separate APK per architecture, set a unique version code as described here:\n            // http://tools.android.com/tech-docs/new-build-system/user-guide/apk-splits\n            def versionCodes = [&quot;armeabi-v7a&quot;:1, &quot;x86&quot;:2]\n            def abi = output.getFilter(OutputFile.ABI)\n            if (abi != null) {  // null for the universal-debug, universal-release variants\n                output.versionCodeOverride =\n                        versionCodes.get(abi) * 1048576 + defaultConfig.versionCode\n            }\n\n            // 시간별로 빌드하는 부분을 추가\n            def formattedDate = new Date().format(&#39;yyyy-MM-dd-HH-mm-ss&#39;)\n            def newName = output.outputFile.name\n            newName = newName.replace(&quot;-release&quot;, &quot;-release&quot; + formattedDate)\n            output.outputFile = new File(output.outputFile.parent, newName)\n\n        }\n    }\n...\n...</code></pre></div>\n<p>위와같이 작성하면 <code class=\"language-text\">./gradlew assembleRelease</code> 와 같은 커맨드를 입력했을때\n<code class=\"language-text\">app-release2018-02-15-12-26-58-signed.apk</code> 의 파일을 얻을 수 있으므로 시간대별로 apk를 언제 빌드했는지 알 수 있다.</p>\n<h1 id=\"3-aws의-devops-react-native-bucket-만들기\"><a href=\"#3-aws%EC%9D%98-devops-react-native-bucket-%EB%A7%8C%EB%93%A4%EA%B8%B0\" aria-label=\"3 aws의 devops react native bucket 만들기 permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. AWS의 devops-react-native Bucket 만들기</h1>\n<p>다음의 문서를 따라하여 <code class=\"language-text\">devops-react-native</code>라는 이름의 버킷을 만든다.\n<a href=\"https://docs.aws.amazon.com/ko_kr/AmazonS3/latest/gsg/CreatingABucket.html\">https://docs.aws.amazon.com/ko_kr/AmazonS3/latest/gsg/CreatingABucket.html</a></p>\n<h1 id=\"4-aws-cli-설치후-aws-s3-sync\"><a href=\"#4-aws-cli-%EC%84%A4%EC%B9%98%ED%9B%84-aws-s3-sync\" aria-label=\"4 aws cli 설치후 aws s3 sync permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4. AWS CLI 설치후 aws s3 sync</h1>\n<p>기본적으로 CircleCI가 실행하는 Docker Image인 <code class=\"language-text\">circleci/node:8</code> 에는 <code class=\"language-text\">awscli</code>가 설치되어 있지 않다. 따라서 아래 내용 중 <code class=\"language-text\">beta-deploy-android</code>에 반드시 <code class=\"language-text\">awscli</code>를 설치하는 내용이 들어가야 한다.</p>\n<p><code class=\"language-text\">DevOpsForRN/.circleci/config.yml</code></p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\"># .circleci/config.yml\n\n# To Validate your config.yml then use this cli.\n# `$ circleci config validate -c .circleci/config.yml`\nversion: 2\njobs:\n  build:\n    working_directory: ~/project\n    docker:\n      - image: circleci/node:8\n    steps:\n      - checkout\n      - run: yarn\n      - run: yarn run test\n      - persist_to_workspace:\n          root: ~/project\n          paths:\n            - node_modules\n      - store_test_results:\n          path: ~/project/junit.xml\n\n  beta-deploy-ios:\n    working_directory: ~/project/ios\n    macos:\n      xcode: &quot;9.0&quot;\n    steps:\n      - checkout:\n          path: ~/project\n      - attach_workspace:\n          at: ~/project\n      - run: bundle update fastlane\n      - run: bundle exec fastlane beta\n\n  beta-deploy-android:\n      working_directory: ~/project/android\n      docker:\n        - image: circleci/android:api-27-node8-alpha\n      steps:\n        - checkout:\n            path: ~/project\n        - attach_workspace:\n            at: ~/project\n        - run: bundle update fastlane\n        - run: bundle exec fastlane beta\n        - run: sudo apt-get update &amp;&amp; sudo apt-get install -y awscli # AWS CLI Install\n        - run: aws s3 sync app/build/outputs s3://devops-react-native/\n\n  android:\n    working_directory: ~/project/android\n    docker:\n      - image: circleci/android:api-27-node8-alpha\n    steps:\n      - checkout:\n          path: ~/project\n      - attach_workspace:\n          at: ~/project\n      - run: bundle install --path vendor/bundle\n      - persist_to_workspace:\n          root: ~/project\n          paths:\n            - android\n      - run: bundle exec fastlane test\n      - store_test_results:\n          path: ~/project/android/reports\n\n  ios:\n    macos:\n      xcode: &quot;9.0&quot;\n    working_directory: ~/project/ios\n    environment:\n      FL_OUTPUT_DIR: ~/project/output\n    shell: /bin/bash --login -o pipefail\n    steps:\n      - checkout:\n          path: ~/project\n      - run:\n          name: Set Ruby Version\n          command:  echo &quot;ruby-2.4&quot; &gt; ~/.ruby-version\n      # Not using a workspace here as Node and Yarn versions\n      # differ between the macOS image and the Docker containers above.\n      - run: yarn\n      - run: bundle install --path vendor/bundle\n      - persist_to_workspace:\n          root: ~/project\n          paths:\n            - ios\n      - run: bundle exec fastlane test\n      - store_artifacts:\n          path: ~/project/output\n      - store_test_results:\n          path: ~/project/output/scan\n\nworkflows:\n  version: 2\n  node-android-ios:\n    jobs:\n      - build\n      - android:\n          requires:\n            - build\n      - beta-deploy-android:\n          filters:\n            branches:\n              only:\n                - beta\n          requires:\n            - android\n      - ios:\n          requires:\n            - build\n      - beta-deploy-ios:\n          filters:\n            branches:\n              only:\n                - beta\n          requires:\n            - ios</code></pre></div>\n<h1 id=\"5-circleci-env-variable\"><a href=\"#5-circleci-env-variable\" aria-label=\"5 circleci env variable permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>5. CircleCI Env Variable</h1>\n<ul>\n<li>AWS Permisson 설정\nAWS CLI가 실행되기 위해서는 권한과 인증이 필요하다.\n<a href=\"https://docs.aws.amazon.com/ko_kr/IAM/latest/UserGuide/id_credentials_access-keys.html\">AWS IAM</a> 의 <code class=\"language-text\">Access-Key</code>와 <code class=\"language-text\">Secret-Key</code>를 아래와 같이 설정한다.\n<img src=\"https://github.com/philographer/DevOpsForRN/blob/master/images/aws-key-config.png?raw=true\" alt=\"aws-permission-config\"></li>\n<li>AWS Region 설정\nAWS CLI가 실행되기 위해서는 기본적으로 <code class=\"language-text\">region</code>이 설정되어 있어야 한다.\n<code class=\"language-text\">AWS_DEFAULT_REGION</code>를 <code class=\"language-text\">ap-northeast-2</code>로 설정이 필요하다.\n<img src=\"https://github.com/philographer/DevOpsForRN/blob/master/images/aws-region-config.png?raw=true\" alt=\"aws-region-config\"></li>\n</ul>\n<h1 id=\"6-next\"><a href=\"#6-next\" aria-label=\"6 next permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>6. Next</h1>\n<ul>\n<li><a href=\"https://philographer.github.io/2018/02/15/circleci-rn4/\">Fastlane, CircleCI를 이용하여 React Native DevOps 도입기 (4)</a></li>\n</ul>","frontmatter":{"title":"Fastlane, CircleCI를 이용하여 React Native DevOps 도입기 (3)","date":"February 15, 2018"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/development/circleci-rn3/","previous":{"fields":{"slug":"/development/circleci-rn2/"},"frontmatter":{"title":"Fastlane, CircleCI를 이용하여 React Native DevOps 도입기 (2)","categories":["DevOps"]}},"next":{"fields":{"slug":"/development/circleci-rn4/"},"frontmatter":{"title":"Fastlane, CircleCI를 이용하여 React Native DevOps 도입기 (4)","categories":["DevOps"]}}}}}